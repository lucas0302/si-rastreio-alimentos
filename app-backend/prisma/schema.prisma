generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  id           Int                   @id @default(autoincrement())
  name         String                @db.VarChar(100)
  username     String                @db.VarChar(100)
  password     String                @db.VarChar(255)
  role         role                  @default(user)
  active       Boolean               @default(true)
  dailyReports DailyShipmentReport[]

  @@map("users")
}

model Customers {
  code                  Int                @id
  legal_name            String?
  fantasy_name          String?
  state_subscrition     String?
  neighborhood          String?
  state                 String?
  address               String?
  cep                   String?
  corporate_network     String?
  cnpj_cpf              String?               @map("cnpj/cpf")
  email                 String?
  phone                 String?
  last_sale_date        DateTime?             @db.Date
  payment_method        String?
  daily_shipment_report DailyShipmentReport[]

  @@map("customers")
}

model Product {
  code             BigInt    @id @unique
  description      String?
  group            String?
  company          String?
  last_buying_date DateTime? @db.Date
  last_sale_date   DateTime? @db.Date

  @@map("products")
}

model Vehicle {
  id                    Int                   @id @default(autoincrement())
  model                 String                @db.VarChar(100)
  plate                 String                @unique
  description           String?
  maximumLoad           Float?
  phone                 String?
  daily_shipment_report DailyShipmentReport[]

  @@map("vehicles")
}

model DailyShipmentReport {
  id                       Int       @id @default(autoincrement())
  quantity                 Int
  invoiceNumber            Int
  productionDate           DateTime
  vehicleTemperature       Float     @db.Real
  hasGoodSanitaryCondition Boolean
  driver                   String
  userId                   Int
  products                 Json?
  customerCode             Int
  hasSifOrSisbi            Boolean
  productTemperature       Float     @db.Real
  fillingDate              DateTime  @db.Date
  shipmentDate             DateTime  @db.Date
  deliverVehicle           String?
  customers                Customers @relation(fields: [customerCode], references: [code], onDelete: NoAction, onUpdate: NoAction)
  vehicles                 Vehicle?  @relation(fields: [deliverVehicle], references: [plate], onDelete: NoAction, onUpdate: NoAction)
  users                    Users     @relation(fields: [userId], references: [id])

  @@map("daily_shipment_report")
}

model MonthlyShipmentReport {
  id             Int      @id @default(autoincrement())
  quantity       Decimal
  destination    String   @db.VarChar(50)
  temperature    Decimal
  deliverer      String   @db.VarChar(100)
  productionDate DateTime
  shipmentDate   DateTime
  productId      Int
  customersId    Int

  @@map("monthly_shipment_report")
}

enum role {
  admin
  user
}
